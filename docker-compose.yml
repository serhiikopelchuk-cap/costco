version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:3000
    ports:
      - "80:80"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:3000

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      # Node environment
      - NODE_ENV=development
      
      # URLs
      - FRONTEND_URL=http://localhost:80
      - BACKEND_URL=http://localhost:3000
      
      # Database
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=mydatabase
      
      # Security
      - JWT_SECRET=your-secret-key-here
      
      # SAML Settings
      - SAML_METADATA_FILE=costco_nonprod_meta.xml  # Just the filename, will be resolved relative to mounted config directory
      # - SAML_ENTRY_POINT=https://loginnp.costco.com/idp/SSO.saml2  # Optional: override metadata
      # - SAML_ISSUER=costco-crm-app  # Optional: override metadata
      # - SAML_IDENTIFIER_FORMAT=urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified  # Optional: override metadata
      
      # SAML Certificates (for production)
      # - SAML_CERTIFICATE=${SAML_CERTIFICATE}  # Optional: override metadata
      # - SAML_PRIVATE_KEY=${SAML_PRIVATE_KEY}
    volumes:
      - ./backend/src/certs:/app/src/certs  # Remove :ro to make it writable
      - ./backend/src/config:/app/src/config:ro  # Mount config directory for metadata file
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:3000/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  postgres_data: